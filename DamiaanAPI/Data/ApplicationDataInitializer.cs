using System;
using System.Collections;
using System.Linq;
using System.Threading.Tasks;
using DamiaanAPI.Models;
using Microsoft.AspNetCore.Identity;
using System.Collections.Generic;

namespace DamiaanAPI.Data
{
    public class ApplicationDataInitializer
    {
        private readonly ApplicationDbContext _dbContext;
        private readonly UserManager<IdentityUser> _userManager;
        private readonly RoleManager<IdentityRole> _roleManager;

        public ApplicationDataInitializer(ApplicationDbContext context, UserManager<IdentityUser> userManager, RoleManager<IdentityRole> roleManager)
        {
            _dbContext = context;
            _userManager = userManager;
            _roleManager = roleManager;
        }

        public async Task InitializeData()
        {

            _dbContext.Database.EnsureDeleted();
            _dbContext.Database.EnsureCreated();
          
            Punt punt1 = new Punt
            {
                Lat = 50.313654M,
                Lon = 5.148726M,
                Naam = "Punt 1"
            };
            Punt punt2 = new Punt
            {
                Lat = 50.316873M,
                Lon = 5.152279M,
                Naam = "Point 2"
            };
            var punten = new Punt[] { punt1, punt2 };
            Dictionary<string, string> temp = new Dictionary<string, string>();
            temp.Add("nl", "Test");
            temp.Add("fr", "Test Frans");
            
            Route testRoute1 = new Route
            {
                Naam = temp,
                Lengte = 25,
                Openbaar = true,
                GeoJson = "{'type':'Feature','properties':{},'geometry':{'type':'LineString'," +
                "'coordinates':[[5.148726,50.313654],[5.152459,50.316504],[5.152588,50.316625],[5.152279,50.316873],[5.152108,50.317102],[5.151725,50.317566],[5.151408,50.318098],[5.151108,50.318632],[5.150602,50.319655],[5.150518,50.319981],[5.150566,50.320427],[5.150684,50.320589],[5.150915,50.320908],[5.15165,50.32145],[5.152265,50.321824],[5.152831,50.322282],[5.153079,50.32242],[5.153262,50.322515],[5.155255,50.323338],[5.157656,50.324035],[5.160017,50.324913],[5.160926,50.325509],[5.161245,50.325719],[5.162476,50.326577],[5.164129,50.328197],[5.164675,50.328712],[5.16531,50.329119],[5.166866,50.330056],[5.167991,50.330583],[5.168825,50.330911],[5.169377,50.331138],[5.169742,50.331284],[5.170094,50.331454],[5.17047,50.331663],[5.171309,50.332058],[5.171957,50.332333],[5.17231,50.332516],[5.173304,50.333115],[5.17366,50.333339],[5.173869,50.333215],[5.174306,50.332834],[5.174395,50.332781],[5.174485,50.332752],[5.174564,50.332761],[5.174658,50.332819],[5.174926,50.33298],[5.175288,50.332841],[5.17533,50.332825],[5.175632,50.332709],[5.175818,50.332619],[5.175964,50.332527],[5.176015,50.332401],[5.176033,50.332103],[5.175958,50.33178],[5.17582,50.331707],[5.175493,50.331443],[5.175244,50.331273],[5.175156,50.331188],[5.175106,50.331068],[5.175104,50.330786],[5.175235,50.330479],[5.17525,50.330174],[5.175231,50.330121],[5.174884,50.3298],[5.17483,50.329714],[5.174848,50.329651],[5.174804,50.329592],[5.174741,50.329405],[5.174715,50.329178],[5.174798,50.326932],[5.174806,50.326627],[5.174811,50.326434],[5.174833,50.326064],[5.174865,50.325892],[5.174962,50.325689],[5.175148,50.325456],[5.175343,50.325257],[5.175663,50.325008],[5.175966,50.324817],[5.176291,50.324656],[5.178569,50.323734],[5.179066,50.323528],[5.179009,50.32325],[5.178983,50.323109],[5.178814,50.322642],[5.17878,50.322488],[5.178772,50.32223],[5.178815,50.322048],[5.178834,50.321965],[5.178937,50.321805],[5.179101,50.321624],[5.179276,50.321477],[5.179917,50.321065],[5.180038,50.320951],[5.180111,50.320828],[5.180142,50.320641],[5.180205,50.320347],[5.181125,50.320284],[5.181657,50.320228],[5.182069,50.320139],[5.182464,50.320052],[5.182582,50.320306],[5.182624,50.320397],[5.182774,50.320596],[5.182624,50.320397],[5.182582,50.320306],[5.182464,50.320052],[5.18257,50.3198],[5.182567,50.319491],[5.182436,50.319139],[5.182324,50.319003],[5.181957,50.318764],[5.18182,50.318645],[5.181672,50.318472],[5.181575,50.318311],[5.181539,50.318205],[5.181502,50.318076],[5.181425,50.317865],[5.181253,50.317487],[5.181107,50.317245],[5.180969,50.317065],[5.180768,50.316883],[5.180587,50.316772],[5.179482,50.316271],[5.179,50.31603],[5.178754,50.315875],[5.178328,50.315498],[5.17803,50.315205],[5.177824,50.315048],[5.177216,50.314666],[5.176615,50.314326],[5.176345,50.314205],[5.175979,50.314062],[5.174738,50.313687],[5.173663,50.313314],[5.172855,50.312995],[5.171941,50.312578],[5.171241,50.312294],[5.169344,50.311606],[5.168587,50.311396],[5.167828,50.311259],[5.16774,50.311237],[5.166755,50.310994],[5.164131,50.310275],[5.162667,50.309859],[5.160546,50.309272],[5.160323,50.30926],[5.158462,50.30933],[5.156301,50.309419],[5.156269,50.309504],[5.156387,50.310629],[5.155989,50.311122],[5.1551,50.312316],[5.154238,50.313654],[5.153207,50.315258],[5.152588,50.316625],[5.152227,50.316434],[5.151917,50.316218],[5.150994,50.315611],[5.15036,50.31517],[5.150131,50.315065],[5.149282,50.314611],[5.148571,50.314259]]}}",
                Punten = punten.ToList(),
                Beschrijving = new Dictionary<string, string>()
            };
            var routes = new Route[] { testRoute1 };
            var loper = new Loper()
            {
                Email = "test@test.be",
                FirstName = "test",
                Gemeente = "test",
                LastName = "test"
            };
            testRoute1.Afbeeldingen.Add("test");
            _dbContext.AddRange(punten);
            _dbContext.Add(loper);
            _dbContext.AddRange(routes);
            _dbContext.SaveChanges();
            testRoute1.AddLoper(loper, "M", Zichtbaarheid.Openbaar);
            _dbContext.SaveChanges();
            var role = new IdentityRole();
            role.Name = "Admin";
            

            var role2 = new IdentityRole();
            role2.Name = "Loper";

            await _roleManager.CreateAsync(role);
            await _roleManager.CreateAsync(role2);

            await CreateUser("admin@admin.be", "P@ssword1111");
            _dbContext.SaveChanges();
        }


        private async Task CreateUser(string email, string password)
        {
            var user = new IdentityUser { UserName = email, Email = email};
            
            await _userManager.CreateAsync(user, password);
            await _userManager.AddToRoleAsync(user, "Admin");
        }
    }

}

